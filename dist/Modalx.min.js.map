{"version":3,"sources":["Modalx.min.js"],"names":["f","exports","module","define","target","window"],"mappings":"UAAUA,GAAG,GAAoBC,iBAAVA,SAAoC,oBAAAC,OAAaA,OAAOD,QAAQD,SAAmBG,GAASA,mBAATA,QAAqBA,OAAYA,IAAAA,UAAUH,OAuB7II,EAAAA,oBAvBqKC,OAuBrKD,OAAAA,oBAAAA,OAAAA,OAAAA,oBAAAA,KAAAA,KAAAA,MAAAA,OAAAA,MAAAA,WAAAA,OAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,CAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,IAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,GAAAA,IAAAA,EAAAA,IAAAA,MAAAA,uBAAAA,EAAAA,KAAAA,MAAAA,EAAAA,KAAAA,mBAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,YAAAA,EAAAA,GAAAA,GAAAA,KAAAA,EAAAA,QAAAA,SAAAA,GAAAA,IAAAA,EAAAA,EAAAA,GAAAA,GAAAA,GAAAA,OAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,GAAAA,QAAAA,IAAAA,IAAAA,EAAAA,mBAAAA,SAAAA,QAAAA,EAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,EAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,2mDAAAA","file":"Modalx.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Modalx = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\r\n * Modalx.js\r\n * @author Ozy Wu-Li - @ousikaa\r\n * @description Simple modal toggler\r\n */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n;(function ($, window, document, undefined) {\n    var pluginName = 'Modalx';\n\n    /**\r\n     * Defaults\r\n     */\n    var defaults = {\n        opener: 'js-modalx-open',\n        target: 'js-modalx-target',\n        closer: 'js-modalx-close',\n        isVisibleClass: 'is-visible'\n\n        /**\r\n         * Plugin Constructor\r\n         */\n    };var Modalx = function Modalx(options) {\n        this.options = $.extend({}, defaults, options);\n        this.init();\n    };\n\n    /**\r\n     * Prototype\r\n     */\n    Modalx.prototype = {\n        /**\r\n         * \r\n         */\n        init: function init() {\n            $('.' + this.options.opener).on('click', this.openModal.bind(this));\n            $('.' + this.options.closer).on('click', this.openModal.bind(this));\n            $('.' + this.options.target).on('click', this.closeModal.bind(this));\n            $('.' + this.options.opener + ', .' + this.options.closer).children().css('pointer-events', 'none');\n\n            this.addId();\n        },\n\n        /**\r\n         * \r\n         */\n        addId: function addId() {\n            for (var index = 0; index < $('.' + this.options.opener).length; index++) {\n                $('.' + this.options.opener).eq(index).attr('data-modalx-id', '' + index);\n                $('.' + this.options.closer).eq(index).attr('data-modalx-id', '' + index);\n                $('.' + this.options.target).eq(index).attr('data-modalx-id', '' + index);\n            }\n        },\n\n\n        /**\r\n         * \r\n         */\n        openModal: function openModal(event) {\n            event.preventDefault();\n            $(event.target).toggleClass(this.options.isVisibleClass);\n            var thisTargetId = $(event.target).attr('data-modalx-id');\n            $('.' + this.options.target + '[data-modalx-id=\"' + thisTargetId + '\"]').toggleClass(this.options.isVisibleClass);\n        },\n\n        /**\r\n         * \r\n         */\n        closeModal: function closeModal(event) {\n            event.preventDefault();\n            if ($(event.target).closest('.js-modalx-content').length) {\n                console.log('clicking');\n            } else {\n                $('.' + this.options.target).removeClass(this.options.isVisibleClass);\n            }\n        }\n\n        // A really lightweight plugin wrapper around the constructor,\n        // preventing against multiple instantiations\n    };$.fn[pluginName] = function (options) {\n        return this.each(function () {\n            if (!$.data(this, \"plugin_\" + pluginName)) {\n                $.data(this, \"plugin_\" + pluginName, new OnToggle(options));\n            }\n        });\n    };\n\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\n    module.exports = Modalx;\n})(jQuery, window, document);\n\n},{}]},{},[1])(1)\n});"]}