{"version":3,"sources":["Modalx.min.js"],"names":["f","exports","module","define","amd","window","global","self","this","Modalx","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","$","namespace","defaults","jQuery","document","opener","target","closer","content","isVisibleClass","singleModalTarget","pluginName","autoTarget","openCallback","event","console","log","closeCallback","options","extend","init","prototype","on","openEventHandler","bind","closeEventHandler","children","css","addId","attr","index","eq","preventDefault","addClass","thisTargetId","openModal","closest","closeModal","removeClass"],"mappings":"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","file":"Modalx.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Modalx = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\n/**\r\n * Modalx.js\r\n * @author Ozy Wu-Li - @ousikaa\r\n * @description Simple modal toggler\r\n */\n\n// https://github.com/jquery-boilerplate/jquery-patterns/blob/master/patterns/jquery.basic.plugin-boilerplate.js\n\n// the semi-colon before the function invocation is a safety\n// net against concatenated scripts and/or other plugins\n// that are not closed properly.\n// the anonymous function protects the `$` alias from name collisions\n;(function ($, window, document, undefined) {\n    /**\r\n     * Plugin namespace\r\n     */\n    var namespace = {\n        pluginName: 'Modalx'\n    };\n\n    /**\r\n     * Defaults\r\n     */\n    var defaults = {\n        opener: 'js-modalx-open',\n        target: 'js-modalx-target',\n        closer: 'js-modalx-close',\n        content: 'js-modalx-content',\n        isVisibleClass: 'is-visible',\n        singleModalTarget: false,\n        autoTarget: true,\n        openCallback: function openCallback(event) {\n            console.log('open callback');\n        },\n        closeCallback: function closeCallback(event) {\n            console.log('close callback');\n        }\n    };\n\n    /**\r\n     * Plugin Constructor\r\n     */\n    namespace['pluginName'] = function (options) {\n        this.options = $.extend({}, defaults, options);\n        this.init();\n    };\n\n    /**\r\n     * Prototype\r\n     */\n    namespace['pluginName'].prototype = {\n        /**\r\n         * \r\n         */\n        init: function init() {\n            $('.' + this.options.opener).on('click', this.openEventHandler.bind(this));\n            // $(`.${this.options.closer}`).on('click', this.closeModal.bind(this));\n            $('.' + this.options.target).on('click', this.closeEventHandler.bind(this));\n            $('.' + this.options.opener + ', .' + this.options.closer).children().css('pointer-events', 'none');\n\n            if (this.options.autoTarget) {\n                this.addId();\n            }\n        },\n\n        /**\r\n         * Automatically add IDs\r\n         */\n        addId: function addId() {\n            if (!this.options.singleModalTarget) {\n                for (var index = 0; index < $('.' + this.options.opener).length; index++) {\n                    $('.' + this.options.opener).eq(index).attr('data-modalx-id', '' + index);\n                    $('.' + this.options.closer).eq(index).attr('data-modalx-id', '' + index);\n                    $('.' + this.options.target).eq(index).attr('data-modalx-id', '' + index);\n                }\n            } else {\n                $('.' + this.options.opener).attr('data-modalx-id', 'single');\n                $('.' + this.options.closer).attr('data-modalx-id', 'single');\n                $('.' + this.options.target).attr('data-modalx-id', 'single');\n            }\n        },\n\n\n        /**\r\n         * Open Event Handler\r\n         */\n        openEventHandler: function openEventHandler(event) {\n            event.preventDefault();\n            $(event.target).addClass(this.options.isVisibleClass);\n            var thisTargetId = $(event.target).attr('data-modalx-id');\n\n            this.openModal('.' + this.options.target + '[data-modalx-id=\"' + thisTargetId + '\"]');\n        },\n\n        /**\r\n         * Close Event handler\r\n         */\n        closeEventHandler: function closeEventHandler(event) {\n            event.preventDefault();\n            if ($(event.target).closest('.' + this.options.content).length) {} else {\n                this.closeModal();\n            }\n        },\n\n        /**\r\n         * Open Modal\r\n         */\n        openModal: function openModal(target) {\n            $(target).addClass(this.options.isVisibleClass);\n\n            // Run callback after user opens modal\n            if (this.options.openCallback) {\n                this.options.openCallback(event);\n            }\n        },\n\n\n        /**\r\n         * Close modal\r\n         */\n        closeModal: function closeModal(event) {\n            // remove modal visibility\n            $('.' + this.options.opener + ', .' + this.options.target).removeClass(this.options.isVisibleClass);\n\n            // Run callback after user closes modal\n            if (this.options.closeCallback) {\n                this.options.closeCallback(event);\n            }\n        }\n    };\n\n    /*------------------------------------*\\\r\n      EXPORT OPTIONS\r\n    \\*------------------------------------*/\n    module.exports = namespace['pluginName'];\n})(jQuery, window, document);\n\n},{}]},{},[1])(1)\n});\n"]}